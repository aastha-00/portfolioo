---
interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Portfolio" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body class="bg-gray-900 text-white">
    <nav class="fixed w-full bg-gray-900/90 backdrop-blur-sm z-50">
      <div class="container mx-auto px-6 py-4">
        <div class="flex items-center justify-between">
          <a href="#" class="text-2xl font-bold">Portfolio</a>
          <div class="hidden md:flex space-x-8">
            <a href="#work" class="hover:text-purple-400 transition">Work</a>
            <a href="#photos" class="hover:text-purple-400 transition">Photos</a>
            <a href="#videos" class="hover:text-purple-400 transition">Videos</a>
            <a href="#contact" class="hover:text-purple-400 transition">Contact</a>
          </div>
        </div>
      </div>
    </nav>
    
    <slot />

    <footer class="bg-gray-800 py-8 mt-20">
      <div class="container mx-auto px-6 text-center">
        <p>&copy; 2024 Portfolio. All rights reserved.</p>
      </div>
    </footer>
  </body>
</html>

<style is:global>
  html {
    scroll-behavior: smooth;
  }

  .fade-up {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.6s ease-out, transform 0.6s ease-out;
  }

  .fade-up.visible {
    opacity: 1;
    transform: translateY(0);
  }
</style>

<script>
  const observerOptions = {
    root: null,
    rootMargin: '0px',
    threshold: 0.1
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('visible');
      }
    });
  }, observerOptions);

  document.addEventListener('astro:page-load', () => {
    document.querySelectorAll('.fade-up').forEach(element => {
      observer.observe(element);
    });
  });
</script>